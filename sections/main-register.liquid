{{ 'customer.css' | asset_url | stylesheet_tag }}

{%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}
      px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}
      px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}
        px;
        padding-bottom: {{ section.settings.padding_bottom }}
        px;
      }
    }


  /* trí code */

  #toast {
    display: none;
    justify-content: space-between;
    max-width: 520px;
    width: 100%;
    /* height: 96px; */
    padding: 16px;
    position: absolute;
    border-radius: 2px;
    /* border: 1px solid #000000; */
    overflow: hidden;
    background: white;
    box-shadow: 0 2px 15px rgba(0,0,0,0.1);
    z-index: 5;
    top: 5px;
  right: 0%;
  }
  #icon-wrapper{
    width: 20px;
    height: 20px;
    border-radius: 5px;
    box-sizing: border-box;
  }

  #icon::before, #icon::after {
    position: absolute;
    content: "";
    background: var(--secondary);
    border-radius: 5px;
    top: 50%;
    left: 50%;
  }

  #toast-message {
    padding: 0 20px 0 10px;
    width: 90%;
  }
  #toast-message h4, #toast-message p {
    margin: 0;
    line-height: 20px;
  }
  #toast-message h4 {
    font-size: 14px;
    font-weight: 700;
    letter-spacing: .05em;
    color: #344054;
    margin-bottom: 2px;
  }
  #toast-message p {
    font-size: 14px;
    font-weight: 400;
    letter-spacing: .05em;
    color: #475467;
  }

  #toast-close {
    position: relative;
  /*   padding: 12px; */
    border: none;
    border-radius: 5px;
    cursor: pointer;
    background: rgba(0,0,0,0);
    transition: background 0.2s ease-in-out;
    height: 20px;
  }
  #toast-close:hover {
    background: rgba(0,0,0,0.1);
  }
  #toast-close::before, #toast-close::after {
    position: absolute;
    content: '';
    height: 20px;
    width: 1px;
    border-radius: 5px;
    background: #9AA4B2;
    top: 50%;
    left: 50%;
    transition: background 0.2s ease-in-out;
  }
  #toast-close:hover::before, #toast-close:hover::after {
    background: #404040;
  }
  #toast-close::before {
    transform: translate(-50%, -50%) rotate(45deg);
  }
  #toast-close::after {
    transform: translate(-50%, -50%) rotate(-45deg);
  }

  @keyframes close {
    from {
      top: 5px;
      opacity: 1;
      transform: scale(1);
      visibility: visible;
    }
    to {
      top: -25px;
      opacity: 0;
      transform: scale(0.5);
      visibility: hidden;
    }
  }

  @keyframes open {
    from {
      top: -25px;
      opacity: 0;
      transform: translateX(-50%) scale(0.5);
      visibility: hidden;
    }
    to {
      top: 5px;
      opacity: 1;
      transform: translateX(-50%) scale(1);
      visibility: visible;
    }
  }

  #timer {
    width: 0%;
    height: 4px;
    background: var(--primary);
    position: absolute;
    bottom: 0;
    left: 0;
    border-top-right-radius: 5px;
    box-shadow: 0 0 8px var(--primary);
  }
  .timer-animation {
    animation: countdown 5s linear forwards;
  }
  @keyframes countdown {
    from {
      width: 100%;
    }
    to {
      width: 0%;
    }
  }

  /* ----------------------- */
  /* Success Styling         */
  /* ----------------------- */
  .success {
    --primary: #2DD743;
    --secondary: #E3FEE6;
  }
  .success #icon {
    transform: rotate(-45deg);
  }
  .success  #icon::before{
    width: 10px;
    height: 3px;
    transform: translate(calc(-50% + 1px), calc(-50% + 1px));
  }
  .success  #icon::after{
    width: 3px;
    height: 6px;
    transform: translate(calc(-50% - 3px), calc(-50% - 1px));
  }

  /* trí code */
{%- endstyle -%}

<section id="toast" class="info">
  <div id="icon-wrapper">
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M10 0.25C8.07164 0.25 6.18657 0.821828 4.58319 1.89317C2.97982 2.96451 1.73013 4.48726 0.992179 6.26884C0.254225 8.05042 0.061142 10.0108 0.437348 11.9021C0.813554 13.7934 1.74215 15.5307 3.10571 16.8943C4.46928 18.2579 6.20656 19.1865 8.09787 19.5627C9.98919 19.9389 11.9496 19.7458 13.7312 19.0078C15.5127 18.2699 17.0355 17.0202 18.1068 15.4168C19.1782 13.8134 19.75 11.9284 19.75 10C19.7473 7.41498 18.7192 4.93661 16.8913 3.10872C15.0634 1.28084 12.585 0.25273 10 0.25ZM14.2806 8.28063L9.03063 13.5306C8.96097 13.6004 8.87826 13.6557 8.78721 13.6934C8.69616 13.7312 8.59857 13.7506 8.5 13.7506C8.40144 13.7506 8.30385 13.7312 8.2128 13.6934C8.12175 13.6557 8.03903 13.6004 7.96938 13.5306L5.71938 11.2806C5.57865 11.1399 5.49959 10.949 5.49959 10.75C5.49959 10.551 5.57865 10.3601 5.71938 10.2194C5.86011 10.0786 6.05098 9.99958 6.25 9.99958C6.44903 9.99958 6.6399 10.0786 6.78063 10.2194L8.5 11.9397L13.2194 7.21937C13.2891 7.14969 13.3718 7.09442 13.4628 7.0567C13.5539 7.01899 13.6515 6.99958 13.75 6.99958C13.8486 6.99958 13.9461 7.01899 14.0372 7.0567C14.1282 7.09442 14.2109 7.14969 14.2806 7.21937C14.3503 7.28906 14.4056 7.37178 14.4433 7.46283C14.481 7.55387 14.5004 7.65145 14.5004 7.75C14.5004 7.84855 14.481 7.94613 14.4433 8.03717C14.4056 8.12822 14.3503 8.21094 14.2806 8.28063Z"
        fill="#78B032"
      />
    </svg>
  </div>
  <div id="toast-message">
    <h4>Success</h4>
    {% if customer -%}
      <p>Your account created successfully.</p>
    {% else %}
      <p>You have successfully registered, we will review and contact you via email.</p>
    {% endif %}
  </div>
  <button id="toast-close"></button>
</section>

<div class="customer register section-{{ section.id }}-padding">
  <svg style="display: none">
    <symbol id="icon-error" viewBox="0 0 13 13">
      <circle
        cx="6.5"
        cy="6.50049"
        r="5.5"
        stroke="white"
        stroke-width="2" />
      <circle
        cx="6.5"
        cy="6.5"
        r="5.5"
        fill="#EB001B"
        stroke="#EB001B"
        stroke-width="0.7" />
      <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white" />
      <path
        d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z"
        fill="white"
        stroke="#EB001B"
        stroke-width="0.7">
    </symbol>
  </svg>
  <div class="header-form">
    <h1>
      {{ 'customer.register.title' | t }}
    </h1>
    {%- if section.settings.text != blank -%}
      {{- section.settings.text -}}
    {%- endif -%}
  </div>
  <div class="tab tab-account">
    <div class="form-account-header">
      <button class="tablinks active tablinks-customer" onclick="openCity(event, 'customerAccount')">
        Customer Account
      </button>
      <button class="tablinks tablinks-wholesaler" onclick="openCity(event, 'wholesalerAccount')">
        Wholesaler Account
      </button>
    </div>
  </div>
  <div class="form-account-content">
    <div id="customerAccount" class="tabcontent customer-class">
      {%- form 'create_customer', id: 'sign-up-form1', return_to: routes.account_register_url -%}
        {% comment %} {{ create_customer.posted_successfully }}  {% endcomment %}

        {%- if form.posted_successfully? -%}
          <h1>Your account created successfully</h1>
        {%- endif -%}
        {% if customer %}
          {% comment %} <h1>customer zxcccccccccccccccccccccccccccccccczxczxczxczxczxczxczxc zxczxczx</h1>{% endcomment %}
          {% comment %}
            <section id="toast" class="info">
              <div id="icon-wrapper">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M10 0.25C8.07164 0.25 6.18657 0.821828 4.58319 1.89317C2.97982 2.96451 1.73013 4.48726 0.992179 6.26884C0.254225 8.05042 0.061142 10.0108 0.437348 11.9021C0.813554 13.7934 1.74215 15.5307 3.10571 16.8943C4.46928 18.2579 6.20656 19.1865 8.09787 19.5627C9.98919 19.9389 11.9496 19.7458 13.7312 19.0078C15.5127 18.2699 17.0355 17.0202 18.1068 15.4168C19.1782 13.8134 19.75 11.9284 19.75 10C19.7473 7.41498 18.7192 4.93661 16.8913 3.10872C15.0634 1.28084 12.585 0.25273 10 0.25ZM14.2806 8.28063L9.03063 13.5306C8.96097 13.6004 8.87826 13.6557 8.78721 13.6934C8.69616 13.7312 8.59857 13.7506 8.5 13.7506C8.40144 13.7506 8.30385 13.7312 8.2128 13.6934C8.12175 13.6557 8.03903 13.6004 7.96938 13.5306L5.71938 11.2806C5.57865 11.1399 5.49959 10.949 5.49959 10.75C5.49959 10.551 5.57865 10.3601 5.71938 10.2194C5.86011 10.0786 6.05098 9.99958 6.25 9.99958C6.44903 9.99958 6.6399 10.0786 6.78063 10.2194L8.5 11.9397L13.2194 7.21937C13.2891 7.14969 13.3718 7.09442 13.4628 7.0567C13.5539 7.01899 13.6515 6.99958 13.75 6.99958C13.8486 6.99958 13.9461 7.01899 14.0372 7.0567C14.1282 7.09442 14.2109 7.14969 14.2806 7.21937C14.3503 7.28906 14.4056 7.37178 14.4433 7.46283C14.481 7.55387 14.5004 7.65145 14.5004 7.75C14.5004 7.84855 14.481 7.94613 14.4433 8.03717C14.4056 8.12822 14.3503 8.21094 14.2806 8.28063Z"
                    fill="#78B032"
                  />
                </svg>
              </div>
              <div id="toast-message">
                <h4>Success</h4>
                <p>You have successfully registered, we will review and contact you via email.</p>
              </div>
              <button id="toast-close"></button>
            </section>
          {% endcomment %}
          <script>
            const toast = document.querySelector('#toast');
            toast.style.display = 'flex';
            setTimeout(function () {
              window.location.href = '/';
              return false;
            }, 3000);
          </script>
        {%- endif -%}

        {%- if form.errors -%}
          <h2
            class="form__message"
            tabindex="-1"
            autofocus
          >
            <svg aria-hidden="true" focusable="false">
              <use href="#icon-error" />
            </svg>
            {{ 'templates.contact.form.error_heading' | t }}
          </h2>
          <ul>
            {%- for field in form.errors -%}
              <li>
                {%- if field == 'form' -%}
                  {{ form.errors.messages[field] }}
                {%- else -%}
                  <a href="#RegisterForm-{{ field }}">
                    {{ form.errors.translated_fields[field] | capitalize }}
                    {{ form.errors.messages[field] }}
                  </a>
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
        {%- endif -%}
        <div class="form">
          <div class="form-account">
            <input
              class="input__field"
              type="email"
              name="customer[email]"
              id="RegisterForm-email"
              {% if form.email %}
                value="{{ form.email }}"
              {% endif %}
              spellcheck="false"
              autocapitalize="off"
              autocomplete="email"
              aria-required="true"
              {% if form.errors contains 'email' %}
                aria-invalid="true"
                aria-describedby="RegisterForm-email-error"
              {% endif %}
              placeholder=""
              required
            >
            <label for="RegisterForm-Email" class="input__label">
              {{ 'customer.register.email' | t }}<span class="required-red">*</span>
            </label>
          </div>
          <div class="form-account">
            <input
              class="input__field"
              type="text"
              name="customer[first_name]"
              id="RegisterForm-FirstName"
              {% if form.first_name %}
                value="{{ form.first_name }}"
              {% endif %}
              autocomplete="given-name"
              placeholder=""
              required
            >
            <label for="RegisterForm-FirstName" class="input__label">
              {{ 'customer.register.full_name' | t }}<span class="required-red">*</span>
            </label>
          </div>
          {% comment %}
            <div class="form-account">
              <input
                type="password"
                name="customer[password]"
                id="password"
                {% if form.errors contains 'password' %}
                  aria-invalid="true"
                  aria-describedby="password-error"
                {% endif %}
                required
              >
              <label for="password">
                {{ 'customer.register.password' | t }}
              </label>
              {%- if form.errors contains 'password' -%}
                <small id="password-error" class="form__message">
                  <svg aria-hidden="true" focusable="false">
                    <use href="#icon-error" />
                  </svg>
                  {{ form.errors.translated_fields.password | capitalize }}
                  {{ form.errors.messages.password }}
                </small>
              {%- endif -%}
            </div>

            <div class="form-account">
              <input
                type="password"
                name="customer[password_confirmation]"
                id="password_confirmation"
                {% if form.errors contains 'password_confirmation' %}
                  aria-invalid="true"
                  aria-describedby="password_confirmation-error"
                {% endif %}
                required
              >
              <label for="password_confirmation">
                {{ 'customer.register.re_password' | t }}
              </label>
              {%- if form.errors contains 'password_confirmation' -%}
                <small id="password_confirmation-error" class="form__message">
                  <svg aria-hidden="true" focusable="false">
                    <use href="#icon-error" />
                  </svg>
                  {{ form.errors.translated_fields.password_confirmation | capitalize }}
                  {{ form.errors.messages.password_confirmation }}
                </small>
              {%- endif -%}
            </div>
          {% endcomment %}
          <div class="form-account">
            <input
              class="input__field"
              type="password"
              name="customer[password]"
              id="RegisterForm-password password1"
              aria-required="true"
              {% if form.errors contains 'password' %}
                aria-invalid="true"
                aria-describedby="RegisterForm-password-error"
              {% endif %}
              placeholder=""
              required
            >
            <label for="RegisterForm-Password" class="input__label">
              {{ 'customer.register.password' | t }}<span class="required-red">*</span>
            </label>
          </div>
          <div class="form-account">
            <input
              class="input__field"
              type="password"
              name="customer[password_confirmation]"
              id="RegisterForm-password confirm-password1"
              aria-required="true"
              {% if form.errors contains 'password_confirmation' %}
                aria-invalid="true"
                aria-describedby="RegisterForm-password-error"
              {% endif %}
              placeholder=""
              required
            >
            <label for="RegisterForm-Password" class="input__label">
              {{ 'customer.register.re_password' | t }}<span class="required-red">*</span>
            </label>
          </div>
          {% comment %}
            {%- if form.errors contains 'password' -%}
              <span id="RegisterForm-password-error" class="form__message">
                <svg aria-hidden="true" focusable="false">
                  <use href="#icon-error" />
                </svg>
                {{ form.errors.translated_fields.password | capitalize }}
                {{ form.errors.messages.password }}.
              </span>
            {%- endif -%}
          {% endcomment %}
        </div>
        <input type="hidden" name="customer[tags]" value="customer">
        <div class="btn-account">
          <button class="btn-submit">
            {{ 'customer.register.submit' | t }}
          </button>
          <button type="reset" class="btn-reset">
            <a href="{{ routes.account_login_url }}">
              {{ 'customer.register.back' | t }}
            </a>
          </button>
        </div>
      {%- endform -%}
    </div>
    <div id="wholesalerAccount" class="tabcontent wholesaler-class">
      <div class="wholesale-contact">
        <div class="contact">
          {%- capture form_class -%}contact-form__form {% if section.settings.layout != 'full' %}{% if section.settings.enable_shadow %}shadow{% endif %} border-radius{% endif %}{%- endcapture -%}
          {%- form 'contact', class: form_class -%}
            <div class="contact-form contact-form-mobile--{{ section.settings.image_height_mobile }} contact-form-large--{{ section.settings.image_height_large }} {% if section.settings.form_first %}contact-form--reverse{% endif %} {% if section.settings.custom_colors %}{% else %}{% if section.settings.color_scheme != 'soft' %}color color-{{ section.settings.color_scheme }}{% endif %} color-gradient{% else %}contact-form--margin-top contact-form--bordered{% endif %}">
              <div class="form {% if section.settings.layout == 'full' %}form--no-padding{% endif %}">
                {% assign contact_posted = request.query_string | split: '=' | last %}
                {{ request.url }}
                {% if contact_posted == 'true' %}
                  <script>
                    const toast = document.querySelector('#toast');
                    alert(toast);
                    toast.style.display = 'flex';
                  </script>
                {% endif %}

                {%- if form.errors -%}
                  <small class="form-message small-text" id="Contact-error--{{ section.id }}">
                    {% comment %} {% render 'icon' with 'red-exclamation' %}{{ form.errors | default_errors }} {% endcomment %}
                  </small>
                {%- endif -%}

                <div class="input-group">
                  <input
                    is="loess-input-field"
                    type="email"
                    class="input__field {% if customer.email != blank %}input__field--has-input{% endif %}"
                    name="contact[email]"
                    id="ContactEmail-{{ section.id }}"
                    {% if customer %}
                      value="{{ customer.email }}"
                    {% endif %}
                    required
                    placeholder=""
                  >
                  <label for="ContactEmail-{{ section.id }}" class="input__label">
                    Email<span class="required-red">*</span>
                    {% comment %} <span aria-hidden="true">*</span> {% endcomment %}
                  </label>
                </div>
                {%- for block in section.blocks -%}
                  {%- liquid
                    assign count = 0
                    assign input_label = block.settings.title | escape

                    if input_label == blank
                      assign count = count | plus: 1
                      assign input_label = 'Label ' | append: count
                    endif
                  -%}

                  <div class="input-group">
                    {%- case block.type -%}
                      {%- when 'text-field' -%}
                        {%- if block.settings.multi_line_field == false -%}
                          <input
                            is="loess-input-field"
                            type="text"
                            class="input__field"
                            name="contact[{{ input_label | escape }}]"
                            id="Contact-{{ input_label | handle }}-{{ section.id }}"
                            placeholder=""
                            {% if block.settings.required %}
                              required
                            {% endif %}
                            placeholder=""
                          >
                          <label for="Contact-{{ input_label | handle }}-{{ section.id }}" class="input__label">
                            {{ input_label -}}
                            {%- if block.settings.required %}<span class="required-red">*</span>{% endif %}
                          </label>
                        {%- else -%}
                          <textarea
                            class="input__field input__textarea"
                            name="contact[{{ input_label | escape }}]"
                            id="Contact-{{ input_label | handle }}-{{ section.id }}"
                            placeholder="{{ input_label }}{% if block.settings.required %}*{% endif %}"
                            {% if block.settings.required %}
                              required
                            {% endif -%}
                          ></textarea>
                          <label class="sr-only" for="Contact-{{ input_label | handle }}-{{ section.id }}">
                          {{ input_label }}
                          </label>
                        {%- endif -%}

                      {%- when 'dropdown-menu' -%}
                        {%- assign options = block.settings.options | split: ',' -%}

                        {%- if options == blank -%}
                          {%- continue -%}
                        {%- endif -%}

                        <label
                          class="input__label input__label--select"
                          for="Contact-{{ input_label | handle }}-{{ section.id }}"
                        >
                          {{ input_label | escape -}}
                          {%- if block.settings.required %}*{% endif %}
                        </label>
                        <div class="input__select-wrapper input__select-wrapper{{ forloop.index }}">
                          <select
                            id="Contact-{{ input_label | handle }}-{{ section.id }}"
                            class="input__select"
                            name="contact[{{ input_label | escape }}]"
                            {% if block.settings.required %}
                              required
                            {% endif %}
                            onchange="changeBackgroundColor(this, {{ forloop.index }})"
                          >
                            <option selected disabled>---</option>

                            {%- for option in options -%}
                              <option value="{{ option | strip | escape }}">
                                {{ option | strip | escape }}
                              </option>
                            {%- endfor -%}
                          </select>
                          <span>
                            {% comment %} {% render 'icon' with 'caret' %} {% endcomment %}
                          </span>
                        </div>
                    {%- endcase -%}
                  </div>
                {%- endfor -%}

                <div class="contact-form__textarea input-group">
                  <textarea
                    class="input__field input__textarea caption"
                    name="contact[body]"
                    id="ContactComment-{{ section.id }}"
                    placeholder="Message"
                  ></textarea>
                  <label class="sr-only" for="ContactComment-{{ section.id }}">comment</label>
                </div>
                <div class="btn-account">
                  <button class="btn-submit">
                    {{ 'customer.register.submit' | t }}
                  </button>
                  <button type="reset" class="btn-reset">
                    <a href="{{ routes.account_login_url }}">
                      {{ 'customer.register.back' | t }}
                    </a>
                  </button>
                </div>
                {% comment %}
                  <button
                    type="submit"
                    class="button button--primary button--center {% if section.settings.color_scheme == 'soft' %}soft-background--default-text{% endif %} tap"
                  >
                    Send
                    <img src="{{'arrow.svg' |  asset_url}}" alt="">
                  </button>
                {% endcomment %}
              </div>
            </div>
          {%- endform -%}
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  const currentUrl = window.location.href;
  const urlParams = new URLSearchParams(window.location.search);
  const fragment = window.location.hash.substring(1);

  const contactPosted = urlParams.get('contact_posted');
  const toast = document.querySelector('#toast');
  if (contactPosted === 'true') {
    console.log(toast, 'toast');
    toast.style.display = 'flex';
  }
  const closeToast = () => {
    toast.style.animation = 'close 0.3s cubic-bezier(.87,-1,.57,.97) forwards';
    clearTimeout(countdown);
  };
  const closeToastBtn = document.querySelector('#toast-close');
  closeToastBtn.addEventListener('click', closeToast);

  function changeBackgroundColor(selectElement) {
    var selectedValue = selectElement.value;
    var selectionElement = document.querySelector('.input__select-wrapper');
    if (selectedValue) {
      selectionElement.style.backgroundColor = 'white';
      selectionElement.style.borderBottom = '1px solid #000';
      selectElement.style.backgroundColor = 'white';
    }
  }
</script>
<script>
  // Get the form and input elements
  const signUpForm = document.getElementById('sign-up-form1');
  const passwordInput = document.getElementById('password1');
  const confirmPasswordInput = document.getElementById('confirm-password1');

  // Add event listener to the form's submit event
  signUpForm.addEventListener('submit', (event) => {
    // Get the password and confirm password values
    const password = passwordInput.value;
    const confirmPassword = confirmPasswordInput.value;

    // Check if the passwords match
    if (password !== confirmPassword) {
      // Prevent form submission and display an error message
      event.preventDefault();
      alert('Passwords do not match. Please try again.');
    }
  });

  // Get the form and input elements
  const signUpForm2 = document.getElementById('sign-up-form2');
  const passwordInput2 = document.getElementById('password2');
  const confirmPasswordInput2 = document.getElementById('confirm-password2');

  // Add event listener to the form's submit event
  signUpForm2.addEventListener('submit', (event) => {
    // Get the password and confirm password values
    const password2 = passwordInput2.value;
    const confirmPassword2 = confirmPasswordInput2.value;

    // Check if the passwords match
    if (password2 !== confirmPassword2) {
      // Prevent form submission and display an error message
      event.preventDefault();
      alert('Passwords do not match. Please try again.');
    }
  });
</script>

<script src="{{ 'account.js' | asset_url }}" defer="defer"></script>
{% schema %}
{
  "name": "t:sections.main-register.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "richtext",
      "id": "text",
      "default": "<p>Singup</p>",
      "label": "t:sections.rich-text.blocks.text.settings.text.label"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "id": "page_title",
      "type": "text",
      "label": "Page Title"
    },
    {
      "id": "description",
      "type": "html",
      "label": "Description",
      "default": "Are you ready to take your coffee business to extraordinary new heights? Best Bean Best Cup invites you to join forces with us and unleash the full potential of your enterprise.<br/><br/>Why Partner with Best Bean Best Cup?"
    },
    {
      "id": "left_item_title_1",
      "type": "text",
      "label": "Left item title 1",
      "default": "Exquisite Quality"
    },
    {
      "id": "left_item_description_1",
      "type": "inline_richtext",
      "label": "Left item description 1",
      "default": "Our beans are sourced from the most esteemed coffee regions worldwide, ensuring an unparalleled taste experience that will captivate your customers and keep them coming back for more."
    },
    {
      "id": "left_item_title_2",
      "type": "text",
      "label": "Left item title 2",
      "default": "Tailored Support"
    },
    {
      "id": "left_item_description_2",
      "type": "inline_richtext",
      "label": "Left item description 2",
      "default": "Benefit from our dedicated team of experts who are committed to your success. From personalized consultations to bespoke marketing strategies, we provide the support you need to thrive in a competitive market."
    },
    {
      "id": "left_item_title_3",
      "type": "text",
      "label": "Left item title 3",
      "default": "Sustainable Partnership"
    },
    {
      "id": "left_item_description_3",
      "type": "inline_richtext",
      "label": "Left item description 3",
      "default": "Join us in our mission to promote sustainability and ethical sourcing practices within the coffee industry. Together, we can make a positive impact on the environment and the communities we serve."
    },
    {
      "id": "right_item_title_1",
      "type": "text",
      "label": "Right item title 1",
      "default": "Comprehensive Range"
    },
    {
      "id": "right_item_description_1",
      "type": "inline_richtext",
      "label": "Right item description 1",
      "default": "From bold and juicy blends to intricately nuanced single origins, our extensive selection offers something for every palate, allowing you to cater to diverse tastes and preferences with ease."
    },
    {
      "id": "right_item_title_2",
      "type": "text",
      "label": "Right item title 2",
      "default": "Competitive Edge"
    },
    {
      "id": "right_item_description_2",
      "type": "inline_richtext",
      "label": "Right item description 2",
      "default": " In an ever changing industry it's imperative that you don't get left behind. Our Training Centre has mapped out the equipment, products & technologies that will change our industry over the next 5 years. These insights can help set your business and future proof your operation so that you are a success."
    },
    {
      "id": "right_item_title_3",
      "type": "text",
      "label": "Right item title 3",
      "default": "Ready to Transform Your Business?"
    },
    {
      "id": "right_item_description_3",
      "type": "inline_richtext",
      "label": "Right item description 3",
      "default": "Seize the opportunity to partner with Best Bean Best Cup and unlock a world of possibilities for your coffee business."
    },
    {
      "id": "form_title",
      "type": "html",
      "label": "Form title",
      "default": "Together<br/> we Grow."
    },
    {
      "id": "form_description",
      "type": "inline_richtext",
      "label": "Form description",
      "default": "  Be our partner. Together, let's brew greatness and redefine the standards of excellence in the coffee industry!"
    }
  ],
  "blocks": [
    {
      "type": "text-field",
      "name": "Text field",
      "settings": [
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required field",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "multi_line_field",
          "label": "Multi-line field",
          "default": false
        },
        {
          "type": "header",
          "content": "Content"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Label"
        }
      ]
    },
    {
      "type": "dropdown-menu",
      "name": "Dropdown menu",
      "settings": [
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required field",
          "default": false
        },
        {
          "type": "header",
          "content": "Content"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Label"
        },
        {
          "type": "text",
          "id": "options",
          "label": "Options",
          "default": "Option 1, Option 2, Option 3",
          "info": "Separate each option with a comma"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Register section",
      "blocks": [
        {
          "type": "text-field",
          "settings": {
            "title": "Name",
            "required": true
          }
        }
      ]
    }
  ]
}
{% endschema %}
